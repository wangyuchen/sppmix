% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mc_gof_test.R
\name{mc_gof}
\alias{mc_gof}
\title{Monte Carlo goodness of fit test for normal mixture model}
\usage{
mc_gof(pp, intsurf, alpha, L = 5000, burnin = L/10, truncate = FALSE)
}
\arguments{
\item{pp}{point pattern object of class \code{ppp}.}

\item{intsurf}{Object of class intensity_surface.}

\item{alpha}{Significant level for the goodness-of-fit test.}

\item{L}{length of MCMC chain, default to 5000.}

\item{burnin}{number of burn-in iterations.}

\item{truncate}{Whether to truncate the points (or mass) outside the domain,
default to TRUE.}
}
\description{
Performs a test of goodness-of-fit for a given IPPP with mixture intensity
surface. Monte Carlo method is used to compare an observed point pattern with
a proposed normal mixture model.
}
\details{
The test statistic is the average distance between the given point patten
and each component mean. MCMC realizations are used to simulate the distribution
of the test statistic. To conduct the test, need to compare the test statistic
with the percentile of the simulated distribution.
}
\examples{
# Generate intensity surface
intsurf1 <- normmix(ps = c(.3, .7),
                    mus = list(c(0.2, 0.2), c(.8, .8)),
                    sigmas = list(.01*diag(2), .01*diag(2)),
                    lambda = 100,
                    win = square(1))
# Generate point pattern by using intsurf1
pp1 <- rsppmix(intsurf1)
# Apply goodness-of-fit test
mc_gof(pp1, intsurf1, 0.05)
# Generate a different intensity surface
intsurf2 <- normmix(ps = c(.5, .5),
                    mus = list(c(0.2, 0.8), c(.8, .2)),
                    sigmas = list(.01*diag(2), .01*diag(2)),
                    lambda = 100,
                    win = square(1))
# Apply goodness-of-fit test
mc_gof(pp1, intsurf2, 0.05)
}

