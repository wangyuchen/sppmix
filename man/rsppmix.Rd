% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rsppmix.R
\name{rsppmix}
\alias{rsppmix}
\title{Generate a spatial point pattern from normal mixture.}
\usage{
rsppmix(x, ..., truncate = TRUE)
}
\arguments{
\item{x}{Object of class \code{intensity_surface} or \code{normmix}.}

\item{...}{Further parameters passed to \code{to_int_surf()}.
See \code{\link{to_int_surf}} for details.}

\item{truncate}{Whether to truncate the points outside the domain,
default to TRUE.}
}
\value{
A point pattern of class \code{c("sppmix", "ppp")}.
}
\description{
This function generates a point pattern from a given normal mixture or
intensity surface.
}
\details{
If an intensity surface is passed to \code{intsurf}, it will generate mixture
directly. If you don't have an intensity surface beforehand, you can pass a
normal mixture of class \code{normmix} and specify lambda and window as
additianl parameters. Even if you have an intensity surface and passed it to
\code{rsppmix()}, you can still overwrite it's intensity and window with
additional parameters. See examples for details.

The number of points \code{n} follows Poisson distribution with intensity
lambda * area of window.

When \code{truncate = TRUE}, a point pattern with \code{n} points will be
generated from the mixture first. Then if not all the points are in the
domain, it will generate more points until there are exactly \code{n} points
in the domain. If \code{truncate = FALSE} is set, the returned point pattern
will not check whether the points are inside the domain.
}
\examples{
rsppmix(demo_intsurf)

# overwrite lambda or win
rsppmix(demo_intsurf, lambda = 200)
rsppmix(demo_intsurf, win = square(2))

# use normmix with additional parameters
rsppmix(demo_mix, lambda = 100, win = square(1))

# turn off truncation
rsppmix(demo_intsurf, truncate = FALSE)

}

