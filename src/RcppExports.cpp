// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// pbvnorm
double pbvnorm(Rcpp::NumericVector const& xlims, Rcpp::NumericVector const& ylims, Rcpp::NumericVector const& mu, Rcpp::NumericMatrix const& sigma);
RcppExport SEXP sppmix_pbvnorm(SEXP xlimsSEXP, SEXP ylimsSEXP, SEXP muSEXP, SEXP sigmaSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< Rcpp::NumericVector const& >::type xlims(xlimsSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector const& >::type ylims(ylimsSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector const& >::type mu(muSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix const& >::type sigma(sigmaSEXP);
    __result = Rcpp::wrap(pbvnorm(xlims, ylims, mu, sigma));
    return __result;
END_RCPP
}
// approx_normmix
Rcpp::NumericVector approx_normmix(Rcpp::List mix, Rcpp::NumericVector xlim, Rcpp::NumericVector ylim);
RcppExport SEXP sppmix_approx_normmix(SEXP mixSEXP, SEXP xlimSEXP, SEXP ylimSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< Rcpp::List >::type mix(mixSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type xlim(xlimSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type ylim(ylimSEXP);
    __result = Rcpp::wrap(approx_normmix(mix, xlim, ylim));
    return __result;
END_RCPP
}
// dnormmix
arma::mat dnormmix(Rcpp::List mix, Rcpp::NumericVector xlim, Rcpp::NumericVector ylim, int L, bool truncate);
RcppExport SEXP sppmix_dnormmix(SEXP mixSEXP, SEXP xlimSEXP, SEXP ylimSEXP, SEXP LSEXP, SEXP truncateSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< Rcpp::List >::type mix(mixSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type xlim(xlimSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type ylim(ylimSEXP);
    Rcpp::traits::input_parameter< int >::type L(LSEXP);
    Rcpp::traits::input_parameter< bool >::type truncate(truncateSEXP);
    __result = Rcpp::wrap(dnormmix(mix, xlim, ylim, L, truncate));
    return __result;
END_RCPP
}
// dbvnorm
arma::vec dbvnorm(arma::mat x, arma::rowvec mean, arma::mat sigma, bool logd);
RcppExport SEXP sppmix_dbvnorm(SEXP xSEXP, SEXP meanSEXP, SEXP sigmaSEXP, SEXP logdSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type mean(meanSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< bool >::type logd(logdSEXP);
    __result = Rcpp::wrap(dbvnorm(x, mean, sigma, logd));
    return __result;
END_RCPP
}
